 BIN +137 Bytes (170%) TechReviewProject/TechReviewApp/__pycache__/admin.cpython-36.pyc 
Binary file not shown.
  BIN +2.32 KB (1300%) TechReviewProject/TechReviewApp/__pycache__/models.cpython-36.pyc 
Binary file not shown.
  4  TechReviewProject/TechReviewApp/admin.py 
@@ -1,3 +1,7 @@
from django.contrib import admin
from .models import TechType, Product, Review

# Register your models here.
admin.site.register(TechType)
admin.site.register(Product)
admin.site.register(Review) 
  69  TechReviewProject/TechReviewApp/migrations/0001_initial.py 
@@ -0,0 +1,69 @@
# Generated by Django 2.2 on 2019-04-18 18:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productname', models.CharField(max_length=255)),
                ('productprice', models.DecimalField(decimal_places=2, max_digits=10)),
                ('productentrydate', models.DateField()),
                ('productURL', models.URLField(blank=True, null=True)),
                ('productdescription', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'products',
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='TechType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('techtypename', models.CharField(max_length=255)),
                ('techdescription', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'techtypes',
                'db_table': 'techtype',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reviewtitle', models.CharField(max_length=255)),
                ('reviewdate', models.DateField()),
                ('rating', models.SmallIntegerField()),
                ('reviewtext', models.TextField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='TechReviewApp.Product')),
                ('user', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'review',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='techtype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='TechReviewApp.TechType'),
        ),
        migrations.AddField(
            model_name='product',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
    ]
  BIN +1.69 KB TechReviewProject/TechReviewApp/migrations/__pycache__/0001_initial.cpython-36.pyc 
Binary file not shown.
  49  TechReviewProject/TechReviewApp/models.py 
@@ -1,3 +1,52 @@
from django.db import models
from django.contrib.auth.models import User

# Create your models here.
class TechType(models.Model):
    techtypename=models.CharField(max_length=255)
    techdescription=models.TextField(null=True, blank=True)

    def __str__(self):
        return self.techtypename

    class Meta:
        db_table='techtype'
        verbose_name_plural='techtypes'

class Product(models.Model):
    productname=models.CharField(max_length=255)
    techtype =models.ForeignKey(TechType, on_delete=models.DO_NOTHING)
    user=models.ForeignKey(User,on_delete=models.DO_NOTHING)
    productprice=models.DecimalField(max_digits=10, decimal_places=2)
    productentrydate=models.DateField()
    productURL=models.URLField(null=True, blank=True)
    productdescription=models.TextField(null=True, blank=True)

    def __str__(self):
        return self.productname

    def memberDiscount(self):
        discount=.05
        return float(self.productprice) * discount

    def discountedPrice(self):
        discount=self.memberDiscount()
        return float(self.productprice)-discount

    class Meta:
        db_table='product'
        verbose_name_plural='products'

class Review(models.Model):
    reviewtitle=models.CharField(max_length=255)
    reviewdate=models.DateField()
    product=models.ForeignKey(Product,on_delete=models.DO_NOTHING)
    user=models.ManyToManyField(User)
    rating=models.SmallIntegerField()
    reviewtext=models.TextField()

    def __str__(self):
        return self.reviewtitle

    class Meta:
        db_table='review'
